version: '3.7'
services:
  
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "PLAINTEXT://kafka-broker-1:29092,LISTENER_LOCAL://localhost:9092"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: "connect"
                  url: "http://connect:8083"
    
    ports:
      - 8089:8080
    links:
      - kafka-broker-1
      - schema-registry
    depends_on:
      - kafka-broker-1
      - schema-registry
    networks:
      - ${GLOBAL_NETWORK}
  
  schema-registry:
    image: confluentinc/cp-schema-registry:.env
    hostname: schema-registry
    container_name: schema-registry
    restart: on-failure
    depends_on:
      - kafka-broker-1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:29092,LISTENER_LOCAL://localhost:9092
      SCHEMA_REGISTRY_DEBUG: 'true'
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: 'backward'
    networks:
      - ${GLOBAL_NETWORK}
  
  kafka-broker-1:
    container_name: kafka-broker-1
    image: confluentinc/cp-kafka:${KAFKA_VERSION:-latest}
    hostname: kafka-broker-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:29092,LISTENER_LOCAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=kafka-broker-1
      -Dcom.sun.management.jmxremote.local.only=false
      -Dcom.sun.management.jmxremote.rmi.port=9999
      -Dcom.sun.management.jmxremote.port=9999
      -Dcom.sun.management.jmxremote.authenticate=false
      -Dcom.sun.management.jmxremote.ssl=false"
    volumes:
      - "./volumes/kafka/broker-1:/var/lib/kafka/data"
    user: root
    networks:
      - ${GLOBAL_NETWORK}